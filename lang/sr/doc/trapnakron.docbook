<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="ch-trapnakron">
<title>Трапнакрон — транскрипције и преводи назива и акронима</title>

<para>Стране именичке синтагме које имају делимичан до потпун карактер личног имена, у текстовима на српском обично се преносе транскрибовањем, а понекад се и преводе (нпр. у оквирима фикције). Који год ова два <emphasis></emphasis> <emphasis>неизворна</emphasis> начина преношења да се изабере, постоји потреба да се читалац снабде и изворним облицима, односно појединим страним транскрипцијама и преводима. На пример, да би могао да истражује одређену тему и изван оквира матерњег језика.</para>

<para>Постоји неколико традиционалних начина да се читаоцу приложе парови прилагођених и изворних облика. Један је да се изворни облик наведе у загради при <emphasis>првом помињању</emphasis>, због чега је подесан најпре за информативне текстове који се секвенцијално читају (нпр. чланке у часописима). Други начин је да се изворни облик да <emphasis>у фусноти</emphasis>, што је погодно за дуже текстове у којим нагласак није на именима самим (нпр. у уџбеницима). Треће, најтемељније решење, јесте да се изворни и прилагођени облици дају <emphasis>појмовником</emphasis> (глосаром) у прилогу, што је потребно у литератури где су стране синтагме многобројне и која се често не прати секвенцијално (нпр. референтни приручници).</para>

<para>У добу опште рачунарске умрежености, међутим, претходно поменути трећи начин може се проширити тако да буде свеобухватнији и изврсно доступан свим читаоцима. Идеја је проста и очигледна: списак прилагођених и изворних облика постави се на странице на Интернету, временом се допуњавајући.<footnote>
    <para>Могло би се рећи да су традиционални транскрипциони речници нешто налик овоме. Међутим, њих поседује само узак круг људи, попут преводилаца и лектора, а не опште читалаштво. Затим, приређују их само лингвисти, што значи да су у сталном заостанку за новообјављеним текстовима, и не могу ни покушати да испрате сву бројност прилагођеница у њима.</para>
    </footnote>Тиме ће облици аутоматски постати доступни кроз упите у интернетским претраживачима, у оба смера, и управо на првом путу којим читаоци данас крећу у истраживање. Такав списак би одржавали они који то желе као услугу својим читаоцима, писци и преводиоци, на основу текстова које приређују.</para>

<para>Јасно је да овакав списак нема стручну лингвистичку тежину, без обзира на то што ће се они који га одржавају сами водити лингвистичким правилима и препорукама. Зато, да му не бисмо придавали тежину коју нема, назовимо га „транскрипције и преводи назива и акронима“ (без „речника“!), скраћено <emphasis>трапнакрон</emphasis>. Намерна предност нове кованице је та што ће се додавањем ње у упит претраживачу, поред синтагме која се тражи, већ међу првим резултатима добити жељени супротни (изворни или прилагођени) облик.</para>

<para>Што се тиче традиционалних текстова, трапнакрон је само ефикаснији начин од традиционалних за давање изворних облика. Међутим, постаје и једини практичан начин када се дође до текстова самосвојних рачунарским окружењима, попут програмских сучеља: такви текстови су високо несеквенцијални („прво појављивање“ губи смисао), тесно повезани са функционалним графичким елементима (не постоје фусноте), и кориснику рачунара пристижу из разнородних извора (нема јединственог „прилога“ где би се могли дати изворни облици). Зато не треба да изненади то што се овај трапнакрон одржава у окриљу <ulink url="../../../doc/html/pology-module.html">Пологије</ulink>, збирке алатки за превођење путем рачунара и за рачунарска окружења.</para>

<sect1 id="s-usage">
    <title>Употреба</title>

<para>Трапнакрон у Пологији може се користити на два начина. Први је проста претрага, где читаоци траже изворне облике ради даљег истраживања, а аутори прилагођене облике ради употребе у својим текстовима. Други начин је програмско уметање прилагођених облика из трапнакрона у крајњи текст, пре свега намењен преводиоцима добро упућеним у рачунарски потпомогнуто превођење.</para>

<sect2 id="s-usref">
<title>Налажење прилагођених и изворних облика</title>

<para>Трапнакрон је изникао у оквиру пројекта превођења рачунарског окружења КДЕ на српски, због чега се из њега изведене веб странице за сада налазе на веб сајту преводилачке радионице КДЕ-а: <ulink url="http://sr.l10n.kde.org/trapnakron/index.php">http://sr.l10n.kde.org/trapnakron/index.php</ulink>. Ово свакако више није најсмисленије место с обзиром на предложени шири дохват трапнакрона, али и такво већ изврсно испуњава основну замисао — лако тражење супротних облика кроз интернетски претраживач. На примеру два упита Гуглу:
<figure id="f-srchtrap">
    <title>Обосмерна претрага Гуглом</title>
    <graphic fileref="google-query-trapnakron-t2o.png" align="center"/>
    <graphic fileref="google-query-trapnakron-o2t.png" align="center"/>
</figure>
Са ових снимака следе два важна запажања: прво, уз додату кључну реч <literal>трапнакрон</literal> или <literal>trapnakron</literal> већ први погодак је онај прави, и друго, понуђена веза уопште и не мора да се испрати да би се дознао тражени супротни облик.</para>

<para>Овакав веб поглед на трапнакрон би се у будућности могао изместити на неку погоднију локацију, али ће основни вид претраге свеједно остати општенаменски претраживач.</para>

</sect2>

<sect2 id="s-usprog">
<title>Програмско захтевање и уметање деклинација</title>

<para>Трапнакрон у Пологији не дефинише само номинативе прилагођених назива и акронима, већ и њихове косе падеже; затим, описне и присвојне придеве где су потребни, такође с променом кроз падеж, род и број. Ово омогућава аутору (писцу или преводиоцу) непосредно наслањање на уносе у трапнакрону у <emphasis>изворном</emphasis> тексту, од којег се гради <emphasis>крајњи</emphasis> текст са разрешеним прилагођеним облицима. Пологија пружа наменски <ulink url="../../../doc/html/pology.l10n.sr.trapnakron-module.html">програмски модул трапнакрона</ulink>, којим се ово разрешавање лако може уградити у поступак добијања крајњег из изворног текста.</para>

<para>На пример, аутор би могао позивати деклинације из трапнакрона по угледу на ИксМЛ ентитете:
<programlisting>
…на предлог &amp;tsienhsueshen-g;, оца кинеског ракетног програма,…
</programlisting>
<literal>&amp;...;</literal> је обележје почетка и краја ентитета, а текст између име ентитета; оно је састављено од кључа уноса у трапнакрону (<literal>tsienhsueshen</literal> за Ћена Сјуесена<footnote>
    <para>Прво амерички, затим кинески ваздухокосмопловни инжењер и научник. Оснивач кинеског свемирског програма. 1911–2009.</para>
</footnote>) и кључа деклинације (<literal>g</literal> за генитив), раздвојених цртицом. Ако је изворни текст у неком од формата обичног текста (или се тако може захватити у ланцу градње крајњег текста), онда се ИксМЛ ентитети могу разрешити питонском скриптом састављеном на основу следећег примера:
<programlisting>
$ python
>>> from pology.l10n.sr.trapnakron import trapnakron_plain
>>> from pology.misc.resolve import resolve_entities_simple
>>> t = trapnakron_plain()
>>> s = u"…на предлог &amp;tsienhsueshen-g;, оца кинеског ракетног програма…"
>>> print resolve_entities_simple(s, t)
…на предлог Ћена Сјуесена, оца кинеског ракетног програма,…
</programlisting>
Да би ово овако радило, потребно је само да Пологија буде <ulink url="../../../doc/html/pology-module.html">присутна и правилно подешена</ulink>. Конструисани објекат <literal>t</literal> у многоме се понаша као стандардни питонски речник:
<programlisting>
>>> print t["changzheng-n"]
чангџенг
>>> print t["foobarxyz-n"] # не постоји
...
KeyError: 'foobarxyz-n'
>>> print t.get("foobarxyz-n")
None
</programlisting>
Управо ово омогућава да <literal>t</literal> буде други аргумент функције <function>resolve_entities_simple</function>, која на том положају очекује речник ентитета.</para>

<para>Аутоматско уметање погодује ситуацијама када је прилагођеница много и када више аутора сарађује на истом тексту, како би се прилагођавање централизовало и ускладило. Ово је случај, на пример, при превођењу и одржавању превода рачунарских окружења, на коме се и просторно и временски смењују многобројни преводиоци. Пример где аутоматско уметање практично није од користи, био би када један преводилац преводи заокружено дело научне или епске фантастике, у коме су сва имена и називи измишљени, а можда ни овоземаљски.</para>

<sect3 id="s-usprogkeys">
<title>Кључеви уноса и деклинација</title>

<para>При аутоматском уметању, потребно је задати кључ уноса и деклинације. Програмски модул трапнакрона изведен је тако да су ови кључеви обавезно чист аски текст, састављен само од слова, цифара и подвлака. На тај начин се могу користити као идентификатори у највећем броју примена, попут оне са ИксМЛ ентитетима.</para>

<para>Кључ уноса у трапнакрону добија се избацивањем свих размака и интерпункције из изворног (или романизованог) облика, свођењем свих слова на визуелно најприближније аски парњаке, те њиховом деверзализацијом. Ако резултујући кључ почиње цифром, испред се додаје подвлака. Примери: <foreignphrase>Stanisław Lem</foreignphrase> → <literal>stanislavlem</literal>, <foreignphrase>R. Daneel Olivaw</foreignphrase> → <literal>rdaneelolivaw</literal>, <foreignphrase>Commodore 64</foreignphrase> → <literal>commodore64</literal>, <foreignphrase>9WM</foreignphrase> → <literal>_9wm</literal>.</para>

<para>Применом овог свођења, може се догодити да два различита уноса спадну на исти кључ. Тада се у трапнакрону ручно дефинишу различити кључеви за те уносе, по обрасцу основни кључ плус неки наставак. У том случају, жељени кључ могуће је потражити ручно, претраживањем изворних датотека трапнакрона, али и помоћу скрипте за оверу трапнакрона <command>traplint</command> (која је део Пологије):
<programlisting language="bash">
$ traplint -erk georgia
# georgiactry
Georgia: н=Грузија, г=Грузије, …
# georgiafont
Georgia: н=Џорџија, г=Џорџије, …
</programlisting>
Овде се види да је кључ за <foreignphrase>Georgia</foreignphrase> као име државе <literal>georgiactry</literal>, а за име фонта <literal>georgiafont</literal>.
</para>

<para>Кључеви деклинација су ниске појединачних слова, у којима свако слово одређује једну граматичку категорију. Кључеви именица по падежима у једнини су: <literal>n</literal>, <literal>g</literal>, <literal>d</literal>, <literal>a</literal>, <literal>i</literal>, <literal>v</literal>, <literal>l</literal>. Именице у множини добијају се додавањем <literal>k</literal>, нпр. <literal>gk</literal> је генитив множине. Кључеви описних придева у једнини састављени су од слова за падеж и слова за род: <literal>m</literal>, <literal>z</literal>, <literal>s</literal>, и технички род „мушки живи“ <literal>u</literal> за случајеве где је акузатив једнак генитиву; нпр. <literal>dz</literal> је описни придев у дативу женског рода. Кључеви описних придева у множини добијају се додавањем <literal>k</literal>, нпр. <literal>gmk</literal> за генитив мушки множине. Кључеви присвојних придева у једнини добијају се додавањем <literal>p</literal> а у множини <literal>kp</literal>, нпр. <literal>dsp</literal> и <literal>dskp</literal> за присвојни придев у дативу средњег рода у једнини и множини.</para>

<para>Не мора сваки унос имати све деклинације. На пример, неки уноси немају множине именица, други немају описне односно присвојне придеве. Ово зависи од природе уноса, с намером да ако одређена деклинација не постоји, онда је не треба ни користити. Наравно, могуће је да недостаје случајно или услед погрешне процене, када треба дојавити да се дода у трапнакрон. Када деклинација не постоји, питонски програмски позив ће подићи изузетак (индексни приступ) или вратити <literal>None</literal> (метод <function>get</function>).</para>

<para>У случају да је описни придев непроменљив, може се позвати празним кључем деклинације. Ово је посебно згодно за акрониме, који су увек непроменљиви као придеви а могу бити чести у одређеним текстовима, па би било замашно и сасвим непотребно увек давати пун кључ придева. Пример:
<programlisting>
>>> print t["fortran-dz"]
фортранској
>>> print t["fortran-"] # није дозвољено
...
KeyError: 'fortran-'
>>> print t["pdf-dz"]
ПДФ
>>> print t["pdf-"] # дозвољено
ПДФ
</programlisting>
</para>

</sect3>

<sect3 id="s-usprogalts">
<title>Алтернативни прилагођени облици</title>

<para>Неки уноси имају алтернативна прилагођења, у виду два различита превода или две различите транскрипције. Као посебан случај, ту је и разликовање укорењене и системске транскрипције. Подразумевано прилагођење добија се на основни кључ уноса, а алтернативна на кључ уноса са одређеним наставком, и то: <literal>_a</literal>, <literal>_a2</literal>, <literal>_a3</literal> за опште алтернативе, а <literal>_s</literal> за системску транскрипцију. На примеру:
<programlisting>
>>> print t["alien-n"] # филм
Туђин
>>> print t["alien_a-n"]
Осми путник
>>> print t["isaacasimov-n"] # писац
Исак Асимов
>>> print t["isaacasimov_s-n"]
Ајзак Асимов
</programlisting>
Уколико унос не дефинише тражено алтернативно прилагођење, позив ће вратити подразумевано прилагођење (а не рецимо <literal>None</literal>).</para>

</sect3>

<sect3 id="s-usproghyb">
<title>Хибридизација на разлике у наречју и писму</title>

<para>Подразумевано, облици који се добијају на упит су на чистом екавском наречју и ћирилицом само у случајевима када не постоје разлике између писама и наречја, тј. када је ијекавска варијанта иста а латиничка се добија простим пресловљавањем. У супротном, упит враћа <emphasis>хибридизовани</emphasis> текст:
<programlisting>
>>> print t["startrek-n"]
Зв›јездане стазе
>>> print t["firefox-n"]
~@¦Фајерфокс¦Firefox¦
</programlisting>
Намера иза овога је темељна подршка превођењу текстова на оба наречја и оба писма, са устаљеним разликама међу њима (на пример, иако се транскрипције по Правопису увек могу корисити у латиничком тексту, у неким миљеима устаљена је употреба изворних облика). При градњи крајњег текста на различитим наречјима и писмима, за растављање хибридизованог на четири чиста текста може се употребити функција <function>hictoall</function> из модула <literal>pology.l10n.sr.hook.wconv</literal>.</para>

<para>Хибридизацију је могуће онеспособити при конструкцији објекта трапнакрона, тако што се три од четири варијанте пониште постављањем параметара <literal>envec</literal> (ек. ћир.), <literal>envel</literal> (ек. лат.), <literal>envic</literal> (ије. ћир.) и <literal>envil</literal> (иј. лат.) на <literal>None</literal>. На пример, за добијање само ијекавског латиницом:
<programlisting>
>>> t = trapnakron_plain(envec=None, envel=None, envic=None)
>>> print t["startrek-n"]
Zvjezdane staze
>>> print t["firefox-n"]
Firefox
</programlisting>
</para>

</sect3>

</sect2>

</sect1>

<sect1 id="s-editing">
<title>Уређивање</title>

<para>Трапнакрон се налази у поддиректоријуму <filename class="directory">l10n/sr/trapnakron/</filename> Пологије, што значи да је присутност и функционалност ризничке копије Пологије једини технички захтев за уређивање трапнакрона. Локација ризнице и подешавање Пологије описани су у уводу њене <ulink url="../../../doc/html/pology-module.html">документације</ulink>.</para>

<para>Грађу трапнакрона чини већи број обичних текстуалних датотека, са наставком <filename class="extension">.sd</filename>, у формату <emphasis>дериватора синтагми</emphasis>. Зато је први корак ка уређивању трапнакрона упознавање овог формата, <ulink url="../../../doc/html/pology.misc.synder-module.html">документованог</ulink> у оквиру Пологијиног програмског модула <literal>synder</literal>.</para>

<para>Формат дериватора синтагми садржи многе детаље, али је основна идеја проста. Сваки ред у датотеци дефинише пар изворне и прилагођених синтагми, при чему су прилагођене синтагме раздвојене на „технички“ корен и суфикс. Један овакав унос назива се <emphasis>извођењем</emphasis>. Неколико примера извођења:
<programlisting>
KAtomic: К-атомик|а, К-атомик|ин
Sokoban: Сокобан|, Сокобан|ов
Minesweeper: Минолов|ац, Миноловч|ев
Penguin Command: Пингвинск|а> команд|а
</programlisting>
<itemizedlist>
<listitem>
<para>У извођењу <literal>KAtomic</literal>, технички корен прилагођене (овде: преведене) именице је <literal>К-атомик</literal> а суфикс <literal>а</literal>. Корен и суфикс су раздвојени усправном цртом, <literal>|</literal>. Састав црте и техничког корена <literal>|а</literal> назива се <emphasis>проширењем</emphasis>; ово ће произвести све именичке облике („К-атомика“, „К-атомике“…). Зарезом се одваја више независних синтагми с проширењима, па ће тако <literal>К-атомик|ин</literal> произвести све облике присвојног придева.</para>
</listitem>
<listitem>
<para>Извођење <literal>Sokoban</literal> посебно је само по томе што је технички суфикс празна ниска („Сокобан“, „Сокобана“…). Овако се изводи већина именица мушког рода.</para>
</listitem>
<listitem>
<para>Празан суфикс не одговара извођењу <literal>Minesweeper</literal>, јер је ‘а’ у „Миноловац“ непостојано (генитив једнине је „Миноловца“ а не „Миноловаца“). Зато је за овакве случајеве дефинисан технички корен <literal>ац</literal>.</para>
</listitem>
<listitem>
<para>У прилагођењу <literal>Penguin Command</literal>, реч „Пингвинска“ је атрибут, па се мења по придевској промени. Зато њен технички суфикс није могао бити <literal>а</literal>, као у <literal>команд|а</literal>, већ се уводи суфикс <literal>а></literal> за атрибуте пред именицама женског рода. Овом извођењу недостаје присвојни придев, јер граматички и не постоји.</para>
</listitem>
</itemizedlist>
</para>

<para>Из примера̂ се види да уредник, поред тога што треба да упозна формат дериватора синтагми, треба да зна и који технички суфикси постоје и када се користе. Њихова извођења дата су у датотеци <filename>l10n/sr/trapnakron/base/aff.sd</filename>, са упутним коментаром. На пример, неки од суфикса из претходних примера дати су овако:
<programlisting>
# Именица мушког рода у једнини, основна
|: _род!=м, н=, г=а, д=у, а=, и=ом, л=у

# Именица мушког рода -ац са непостојаним -а- у једнини
|ац, |ac: _род!=м, н=ац, г=ца, д=цу, а=ац, и=цем, л=цу

# Именица женског рода у једнини, основна
|а, |a: _род!=ж, н=а, г=е, д=и, а=у, и=ом, л=и

# Атрибут уз именицу женског рода у једнини
|а>, |a>: _род!=ж, н=а, г=е, д=ој, а=у, и=ом, л=ој
</programlisting>
Суфикса је немали број, али то не треба да забрињава. Уредник увек може потражити кроз трапнакрон како су решена друга извођења синтагми са истом деклинацијом, а може и развити извођење до репрезентативних облика како би се уверио у исправност своје дефиниције (о чему говори <link linkend="s-edverif">одељак о оверавању</link>).</para>

<sect2 id="s-edgen">
<title>Опште смернице</title>

<para>Следи преглед смерница које важе за сва извођења у трапнакрону, независно од врсте појма који покривају.</para>

<sect3 id="s-edgencat">
<title>Категоризација</title>

<para>Трапнакрон је подељен у категорије на три нивоа; свако извођење има велику категорију, малу категорију и поткатегорију. Велика и мала категорија одређене су именима датотека, по обрасцу <filename>velika-mala.sd</filename>. На пример, сва имена људи су у датотекама <filename>people-*.sd</filename>, а имена научника у датотеци <filename>people-scientists.sd</filename>. У оквиру датотеке, поткатегорије су прости коментари који раздвајају блокове извођења̂. У категорији <literal>people-scientists</literal> тако постоји блок физичара, математичара, биолога… Унутар једног блока, извођења су поређана абецедно по изворним или романизованом облицима.</para>

<para>Категоризација постоји најпре да би се материјал разделио на мање целине којима је технички лакше руковати, и да би се за поједине категорије могле одредити додатне смернице. Ово значи да не треба посвећивати превише пажње томе под којом категоријом завести које извођење („да ли је Вернер фон Браун научник или инжењер?“), већ брзо одлучивати према тренутној инспирацији. Ако је значење неке синтагме потпуно непознато, ту је категорија <literal>misc-*</literal>.</para>

<para>У сваком тренутку могуће је успоставити нову велику или малу категорију (тј. додати нову датотеку), или поткатегорију, како се уочи потреба за тиме.</para>

</sect3>

<sect3 id="s-edgenuniq">
<title>Јединственост извођења</title>

<para>Уколико је неки појам знан под више имена, било изворних (романизованих) или прилагођених, поставља се питање с колико извођења то покрити. Иста недоумица важи и обрнуто, када су два различита појма знана под истим именима. Ово се разрешава на основу употребне вредности имена, а не јединствености и разликовања појмова самих, како ће бити изложено у наредном.</para>

<para>Када се исти појам изворно помиње под два имена, а исто тако и прилагођено, тада се дефинишу и два независна извођења. Ово је случај, на пример, са Ејдом Бајрон односно Ејдом Лавлејс<footnote>
    <para>Викторијанска математичарка, данас често сматрана и првом програмерком односно програмером уопште. 1815–1852.</para>
</footnote>, која се и у изворним и у домаћим текстовима помиње или по девојачком или по удатом презимену, према личном осећају писца. Зато се за њу уводе два извођења:
<programlisting>
Ada Byron: Ејд|а Бајрон
Ada Lovelace: Ејд|а Лавлејс
</programlisting>
(Имена људи се заправо не изводе овако просто, већ су овде дата скраћено да се не би оптерећивао пример. Како се заиста изводе, говори одељак <link linkend="s-edspecpn">посебних смерница о именима људи</link>.)</para>

<para>Уколико је појам познат под више страних имена — типично када се зна и изворно нелатиничко и једно или више романизованих имена — а само под једним домаћим, дефинише се кроз једно извођење са нанизаним свим страним именима:
<programlisting>
Юрий Гагарин, Yuri Gagarin: Јуриј|2 Гагарин|
龙芯, lóngxīn, Loongson: лунгсин|, лунгсин|ов
</programlisting>
</para>

<para>Обрнуто, када је појам познат под једним изворним именом али више домаћих, опет се дефинише једно извођење, али са <emphasis>алтернативним</emphasis> прилагођењима:
<programlisting>
Alien: Туђин|!, Туђин|ов
    @алт: Осм|и!> путник|!
</programlisting>
Једно прилагођење мора се изабрати као подразумевано, овде „Туђин“, а друго као алтернативно, овде „Осми путник“. Алтернативно прилагођење задаје се под <emphasis>окружењем</emphasis> <literal>@алт</literal>, а могућа су и <literal>@алт2</literal>, па и <literal>@алт3</literal>, за сасвим ретке случајеве.
</para>

<para>Претходна два случаја могу бити и комбинована, када се и изворни и домаћи облици колебају између транскрипције и превода:
<programlisting>
长征系列运载火箭, Changzheng, Long March: чангџенг|, чангџенг|ов
    @алт: дуг|и> марш|
</programlisting>
Да ли ће овде подразумевано прилагођење бити транскрипција или превод, зависи од случаја.
</para>

<para>Посебан случај алтернативног прилагођења је тренутна системска транскрипција, коју вреди навести када је у општој употреби укорењена нека ранија. Она се даје под окружењем <literal>@сист</literal>:
<programlisting>
Isaac Newton: Исак| Њутн|
    @сист: Ајзак| Њутон|
</programlisting>
</para>

<para>Уколико је за ијекавско наречје потребно другачије прилагођење, а уредник га познаје, додаје га под окружењем <literal>@иј</literal>. До разликовања у наречју не може доћи код транскрипција, али може код превода:
<programlisting>
Star Trek: Звездан|е-> стаз|е-
    @иј: Звјездан|е-> стаз|е-
</programlisting>
</para>

</sect3>

<sect3 id="s-edgensrc">
<title>Деклинације изворних облика</title>

<para>Остављање изворних облика у тексту латиницом је устаљена пракса у неким областима, и то може бити потребно подржати при аутоматском уметању облика из трапнакрона. Другим речима, тада крајњи ћирилички текст треба да садржи транскрибоване, а латинички изворне облике. Како би се ово омогућило, за већину категорија синтагми у трапнакрону изводе се и деклинације изворних облика (или страних транскрипција). То се чини под окружењем <literal>@л</literal>, као и <literal>@ијл</literal> када постоји разликовање са ијекавским наречјем. На примерима:
<programlisting>
Cyborg: сајборг|, сајборг|ов
    @л: Cyborg|, Cyborg|ov
Adobe: Адоуб|и, Адоуб|ијев
    @л: Adob|e-ij, Adob|ejev
Maple: Мејпл|, Мејпл|ов
    @л: Maple|, Maple|ov
Blowfish: блоуфиш|, блоуфиш|ов
    @л: Blowfish|, Blowfish|ov
</programlisting>
Деклинације изворних облика не дефинишу се ако се изворни облик може добити простим пресловљавањем транскрибованог, нити када је прилагођење извршено преводом:
<programlisting>
Epson: Епсон|, Епсон|ов
Amarok: Амарок|, Амарок|ов
KGoldRunner: К-златобој|ац, К-златобојч|ев
KMail: К-пошт|а, К-пошт|ин
</programlisting>
</para>

<para>За следеће категорије <emphasis>не треба</emphasis> дефинисати деклинације изворних облика, јер се у латиничким текстовима још увек најчешће транскрибују: <literal>languages-*</literal> (осим <literal>languages-prog</literal>), <literal>people-*</literal>, <literal>*-fiction</literal>.</para>

<para>Постојање изворних деклинација у трапнакрону не значи да се обавезно морају наћи у латиничком тексту при аутоматском уметању. Ако се желе прилагођени облици (наравно, пресловљени на латиницу), то се може постићи позивањем конструктора трапнакрона са одговарајућим параметрима.</para>

</sect3>

<sect3 id="s-edgenprop">
<title>Непосредно задавање својстава</title>

<para>Некада са̂мо проширење (тј. технички суфикс) није довољно да дефинише све деклинације и својства у датом извођењу. Тада се потребна својства задају ручно, после проширења и раздвојена зарезима.</para>

<para>Понеки суфикс не дефинише род именице, јер га користе именице два различита рода при чему се за један не може рећи да је много бројнији од другог. Тада се род задаје ручно, својством <literal>_род!</literal>. На пример, суфикс <literal>о</literal> често се примењује и на именице мушког и на именице средњег рода:
<programlisting>
Apolo: Апол|о, Апол|ов, _род!=м
Marble Madness: Кликерск|о> лудил|о, _род!=с
</programlisting>
</para>

<para>Када суфикс пак аутоматски дефинише род, у неким случајевима тај род не мора одговарати. Чест пример су мушка имена и презимена која се завршавају на -а и мењају као именице женског рода. Тада се род опет ручно задаје:
<programlisting>
Edsger Dijkstra: Едсгер| Дајкстр|а, _род!=у
</programlisting>
У овом примеру треба уочити и три споредна детаља. Мушкарци добијају „мушки род живи“, означен словом <literal>у</literal> (код кога је акузатив једнак генитиву), уместо обичног, <literal>м</literal> (акузатив једнак номинативу). Затим, прво проширење, са празним суфиксом, дефинисало би род правилно, али га потискује друго проширење, суфикс <literal>а</literal>; другим речима, последњи сусретнути род постаје укупан род синтагме. Коначно празан суфикс нормално дефинише обичан мушки род, не живи, али су специјално у датотекама с именима људи сви мушки суфикси предефинисани да дају мушки род живи.</para>

<para>Уколико постоји двоумљење око правилности транскрипције, то се бележи својством <literal>_тр=!</literal>. Уколико је познат ИПА запис имена, наводи се као својство <literal>_ипа</literal>.</para>

</sect3>

<sect3 id="s-edgeninh">
<title>Наслањање извођења на претходна</title>

<para>Многе вишечлане синтагме садрже мање синтагме које саме по себи имају извођења у трапнакрону. Тада, да би се избегло понављање истог прилагођеног облика на више места, треба <emphasis>наслонити</emphasis> дужу на краћу синтагму. Ово се чини кроз исти метод проширивања, само што проширење више није техничким суфиксом, већ циљном краћом синтагмом:
<programlisting>
Emacs: Емакс|, Емакс|ов
    @л: Emacs|, Emacs|ov
Lucid Emacs: Лусид|ов> |Emacs
    @л: Lucid|ov> |Emacs
</programlisting>
У извођењу <literal>Lucid Emacs</literal> биће проширени сви именички облици дефинисани извођењем <literal>Emacs</literal>, управо како се очекује („Лусидов Емакс“, „Лусидовог Емакса“…). Некад, међутим, потребан је само један прилагођени облик, типично као део непроменљиве подсинтагме:
<programlisting>
Gnome: Гном|, Гном|ов
    @л: Gnome|, Gnome|ov
Eye of Gnome: Ок|о |Gnome~г, _род!=с
</programlisting>
Проширење <literal>|Gnome~г</literal> даје само генитив, резултујући жељеним облицима („Око Гнома“, „Ока Гнома“, „Оку Гнома“,…); део <literal>~г</literal> је <emphasis>маска проширења</emphasis>, која издваја потребне облике из свих могућих (како тачно маска функционише, описано је у документацији формата).</para>

<para>При наслањању извођења, често је случај да извођење које се користи у проширењу није у истој датотеци као извођење које се дефинише. У горњем примеру, извођење <literal>Eye of Gnome</literal> је у датотеци <filename>software-graphics.sd</filename>, a <literal>Gnome</literal> у <filename>software-system.sd</filename>. Тада треба <emphasis>укључити</emphasis> датотеку прошириваног извођења у датотеку онога које га проширује, додавањем директиве укључивања при врху:
<programlisting>
# Врх датотеке software-graphics.sd
>base/aff.sd  # основна извођења, по техничким суфиксима
>software-system.sd  # извођења у наслањањима
</programlisting>
Када их је више, укључивања се ређају абецедним редоследом.</para>

</sect3>

</sect2>

<sect2 id="s-edspec">
<title>Посебне смернице по категоријама</title>

<para>За неке категорије извођења, поред деклинација корисно је дефинисати и извесне друге податке. Наредни одељци дају преглед таквих случајева.</para>

<sect3 id="s-edspecpn">
<title>Имена људи</title>

<para>Код имена људи треба означити име, презиме и средње име, и у извору и у транскрипцијама, и скраћено навести народност:
<programlisting>
~i Arthur ~s C. ~p Clarke: ~и Артур| ~п Кларк|, _нр=брит
</programlisting>
<literal>~i</literal> и <literal>~и</literal> су равноправне ознаке за име, <literal>~p</literal> и <literal>~п</literal> за презиме, а <literal>~s</literal> и <literal>~с</literal> за средње име. Својство <literal>_нр</literal> наводи народност; ако се разликује народност на рођењу и каснија, проценити која је битнија.</para>

<para>Ако стварно изворно име није латиничко, и зна се, наводи се испред романизација:
<programlisting>
~и Сергей ~п Королёв, ~i Sergey ~p Korolyov: ~п Сергеј| ~п Корољов|, _нр=рус
</programlisting>
Уколико је познато више романизација, поређати их по учесталости, почев од најучесталије.</para>

<para>Ако изворно име јесте латиничко, али садржи бар једно неаски слово које није настало додавањем дијакритика, треба изричито навести приближни аски кључ под којим ће се водити, и то скривен:
<programlisting>
~i Stanisław ~p Lem, |stanislavlem: ~и Станислав| ~п Лем|, _нр=пољ
</programlisting>
</para>

<para>Уколико народност није позната, ставља се знак питања: <literal>_нр=?</literal>.</para>

<para>Имена треба ређати абецедним редоследом по изворном <emphasis>презимену</emphasis>, односно романизованом ако изворно није латиничко.</para>

</sect3>

<sect3 id="s-edspecfict">
<title>Извори у фикцији</title>

<para>Многе велике категорије имају мале категорије које обрађују фикционе појмове те врсте, тј. ради се о категоријама <literal>*-fiction</literal>. За фикциона извођења корисно је пратити одакле потичу: од ког аутора, из ког филма, из ког фантазијског универзума… Порекло се задаје својством <literal>_из</literal>:
<programlisting>
Discovery: Открић|е3, _род!=с, _из=|пис-кларк~н
Quenya: квениј|а, квениј|ски, _из=|пис-толкин~н
</programlisting>
Вредност својства <literal>_из</literal> је проширени номинатив извора, на који се упућује за ту намену дефинисаним кратким унутрашњим кључем (да би се избегло понављање потенцијално замашне пуне синтагме извора):
<programlisting>
~i Arthur ~s C. ~p Clarke, |пис-кларк: ~и Артур| ~п Кларк|, _нр=брит
~i J.R.R. ~p Tolkien, |пис-толкин: ~и Џ.Р.Р. ~п Толкин|, _нр=брит
</programlisting>
</para>

</sect3>

</sect2>

<sect2 id="s-edverif">
<title>Оверавање и пробни развоји</title>

<para>Уредник може лако да провери дефиниције које додаје помоћу скрипте <command>traplint</command>. Ако је Пологија подешена по упутству, ова је скрипта већ у путањи и спремна за извршавање. У најосновнијем режиму рада, када се позове без аргумената:
<programlisting language="bash">
$ traplint
</programlisting>
скрипта ће оверити све постојеће уносе у трапнакрону. То значи да ће бити откривене пре свега синтаксне грешке и грешке у проширивањима (нпр. непостојећи технички суфикс), али и неке логичке грешке које се могу аутоматски пресрести (нпр. недостајање својства рода, или непозната вредност рода). Провере на логичке грешке временом се допуњавају, како се уочи могућност за њихово дефинисање.</para>

<para>Оверавање целог трапнакрона може потрајати, што је незгодно када уредник жели да овери само један или неколико новододатих извођења. Тада може да позове скрипту са опцијом <option>-m</option>:
<programlisting language="bash">
$ traplint -m
</programlisting>
У овом режиму, биће оверени само измењени и додати уноси, на основу разлике у датотекама коју пријављује подложни систем за управљање верзијама.</para>

<para>Напокон, уредник може желети да овери неке конкретне датотеке и појединачна извођења, и они се могу задати као слободни аргументи:
<programlisting language="bash">
$ traplint alien nostromo sulaco  # појединачна извођења по кључу
$ traplint l10n/sr/trapnakron/mech-fiction.sd  # цела датотека по путањи
$ traplint :mech-fiction  # цела датотека по основи имена
</programlisting>
Када се задају појединачна извођења, кључ извођења одређује се како је описано у <link linkend="s-usprogkeys">одељку о кључевима</link> при програмском потраживању облика из трапнакрона. Кључеви се подразумевано поклапају тачно, што је могуће променити на поклапање регуларним изразом издавањем опције <option>-r</option>.</para>

<para>Претходно изложени позиви оверавају извођења, али не исписују ништа када нема грешака. Недостатак грешака на аутоматској провери наравно не значи да грешака и нема, па уредник може желети да види развоје извођења, са крајњим деклинацијама, како би се уверио да је све на месту. То постиже издавањем опције <option>-e</option> уз било који од претходних позива, када се за изабрана извођења исписују репрезентативни развоји:
<programlisting language="bash">
$ traplint -e alien nostromo sulaco
Alien: н=Туђин, г=Туђина, д=Туђину, а=Туђина, и=Туђином, …
    @алт: н=Осми путник, …, а=Осмог путника, …
Nostromo: н=Ностромо, г=Нострома, д=Нострому, …, нмп=Ностромов
Sulaco: н=Сулако, г=Сулака, д=Сулаку, …, нмп=Сулаков
</programlisting>
После сеансе уређивања, пре него што се преда или пошаље закрпа, типичан позив за оверавање и прегледање пробних развоја за измењена и додата извођења био би:
<programlisting language="bash">
$ traplint -me
</programlisting>
</para>

<para>У могућности оверавања, путем назнака при уређивању, може се убројати и истицање синтаксе. Тренутно је дефинисано за КДЕ уређиваче К-писање и Кејт, у стаблу Пологије смештено под <filename>syntax/kate/synder.xml</filename>; у погон се ставља убацивањем (најбоље симвезом) у директоријум <filename class="directory">~/.kde/share/apps/katepart/syntax/</filename>. Истицање овако изгледа у акцији:
<figure id="f-katesyn">
    <title>Истицање формата дериватора синтагми у Кејт</title>
    <graphic fileref="kate-syntax-synder.png" align="center"/>
</figure>
</para>

</sect2>

<sect2 id="s-edcoop">
<title>Сарадња</title>

<para>Уредници могу на више начина обезбедити да њихове допуне и измене трапнакрона буду увршћене у ризницу Пологије. У основи свих је, наравно, прослеђивање закрпе коју пријављује систем за управљање верзијама (СУВ) на праву адресу.</para>

<para>Ако је променљива окружења <envar>TRAPDIR</envar> постављена на корени директоријум трапнакрона, нпр. <filename class="directory">/home/pperic/repos/pology/l10n/sr/trapnakron/</filename>, онда се закрпа која укључује све измене прави једноставним:
<programlisting language="bash">
$ cd $TRAPDIR
$ svn diff >patch.diff
</programlisting>
(Уколико је додата цела нова датотека, треба је прво пријавити СУВ-у помоћу <code>svn add datoteka.sd</code>). Потом се закрпа може послати е-поштом на једну од ових адреса:
<itemizedlist>
<listitem>
<para>директно Чаславу Илићу <email>caslav.ilic@gmx.net</email>, одржаваоцу трапнакрона у Пологији;</para>
</listitem>
<listitem>
<para>на поштанску листу Сорти <email>sorta@googlegroups.com</email>, која се бави питањима рачунарске терминологије на српском језику. Ово је боља варијанта, јер поред одржаваоца и други могу прокоментарисати измене (нпр. ваљаност транскрипција).</para>
</listitem>
</itemizedlist>
</para>

<para>Уместо простог дописивања е-поштом, може се употребити и <ulink url="http://codereview.appspot.com/">Гуглов Преглед кода</ulink>. Овај начин обједињује претходне (шаљу се поруке и одржаваоцу и Сорти), али и омогућава брже и прецизније коментарисање измена и ажурирање предлога. Да би се овоме приступило, прво треба отворити налог на Гуглу (уколико већ није отворен другом приликом), а затим преузети и убацити у путању скрипту <ulink url="http://code.google.com/p/rietveld/wiki/UploadPyUsage"><command>upload.py</command></ulink>, за слање захтева за преглед непосредно из командне линије. Ако је Пера Перић изменио датотеку <filename>people-scientists.sd</filename>, закрпу може послати на преглед овиме:
<programlisting language="bash">
$ cd $TRAPDIR
$ svn status
M       people-scientists.sd
$ upload.py -e pera.peric@negde.net \
            -r caslav.ilic@gmx.net --cc sorta@googlegroups.com --send_mail \
            -m "Допуне трапнакрона."
Upload server: codereview.appspot.com (change with -s/--server)
Loaded authentication cookies from /home/pperic/.codereview_upload_cookies
Issue created. URL: http://codereview.appspot.com/141054
Uploading base file for people-scientists.sd
</programlisting>
Опција <option>-e</option> задаје уредникову адресу е-поште са којом је отворио налог на Гуглу. Опција <option>-r</option> задаје адресу одржаваоца, а <option>--cc</option> Сорте, који треба да буду обавештени о захтеву за преглед. <option>--send_mail</option> чини да им поруке буду одмах послате, насловљене текстом уз опцију <option>-m</option> и са садржајем закрпе. У излазу се добија веза ка захтеву за преглед (горе <literal>http://codereview.appspot.com/141054</literal>), где се налази веб сучеље за даљу обраду захтева. Ако се закрпа накнадно измени, на основу коментара размењених са одржаваоцем и другима, за слање је довољно:
<programlisting language="bash">
$ cd $TRAPDIR
$ upload.py -e pera.peric@negde.net -i 141054 --send_mail \
            -m "Поправке према коментарима."
Upload server: codereview.appspot.com (change with -s/--server)
Loaded authentication cookies from /home/pperic/.codereview_upload_cookies
Issue updated. URL: http://codereview.appspot.com/141054
</programlisting>
Опција <option>-i</option> задаје број постојећег захтева за предлог, како би се нова закрпа надовезала на стару.</para>

<para>Опција <option>--send_mail</option> може и да се не изда, с намером да се поруке пошаљу касније, преко веб сучеља. Ово је корисно када уредник жели додатно да опише измене, у глобалу или додајући коментаре уз неке од њих.</para>

</sect2>

</sect1>

</chapter>

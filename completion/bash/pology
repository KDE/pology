# Bash completion for Pology scripts.

_posieve()
{
    local i cur prev opts sieves osieve
    COMPREPLY=()

    # Check if sieves were already issued.
    sieves=
    for i in `seq 0 $((${#COMP_WORDS[*]} - 2))`; do
        prev="${COMP_WORDS[i]}"
        if [[ ${prev/,/} != $prev ]] || [[ $prev == *.py ]]; then
            sieves=$prev
        else
            for osieve in $posieve_sieves; do
                if [[ $osieve == $prev ]]; then
                    sieves=$prev
                    break
                fi
            done
        fi
        [[ -n "$sieves" ]] && break
    done

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD - 1]}"
    if [[ $cur == -s* ]] && [[ -n "$sieves" ]]; then
        params=`posieve $sieves -P | sed 's/^/-s/'`
        COMPREPLY=( $(compgen -W "$params" -- $cur) )
        return 0
    elif [[ $prev == -s ]] && [[ -n "$sieves" ]]; then
        params=`posieve $sieves -P`
        COMPREPLY=( $(compgen -W "$params" -- $cur) )
        return 0
    elif [[ $cur == -* ]] ; then
        posieve_options=`posieve -O`
        COMPREPLY=($(compgen -W "$posieve_options" -- $cur))
        return 0
    else
        if [[ -z "$sieves" ]] ; then
            posieve_sieves=`posieve -L`
            COMPREPLY=( $(compgen -W "$posieve_sieves" -- $cur) )
            return 0
        fi
    fi
}
complete -F _posieve -o default posieve


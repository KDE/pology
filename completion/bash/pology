# Bash completion for Pology scripts.

_posieve()
{
    local i cur prev opts sieves osieve psieves

    # Check if sieves were already issued.
    sieves=
    i=0
    while [[ $i -lt $COMP_CWORD ]]; do
        prev="${COMP_WORDS[i]}"
        if [[ $prev =~ , ]] || [[ $prev == *.py ]]; then
            sieves=$prev
        else
            for osieve in $posieve_sieves; do
                if [[ $osieve == $prev ]]; then
                    sieves=$prev
                    break
                fi
            done
        fi
        [[ -n "$sieves" ]] && break
        i=$((i + 1))
    done

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD - 1]}"
    if [[ $cur == -s* ]] && [[ $cur != *:* ]] && [[ -n "$sieves" ]]; then
        opts=`posieve $sieves -P | sed 's/^/-s/'`
        COMPREPLY=( $(compgen -W "$opts" -- $cur) )
    elif [[ $prev == -s ]] && [[ $cur != *:* ]] && [[ -n "$sieves" ]]; then
        opts=`posieve $sieves -P`
        COMPREPLY=( $(compgen -W "$opts" -- $cur) )
    elif [[ $cur == -* ]] ; then
        opts=`posieve -O`
        COMPREPLY=($(compgen -W "$opts" -- $cur))
    elif [[ -z "$sieves" ]] ; then
        opts=`posieve -L`
        psieves=
        if [[ $cur =~ , ]]; then
            psieves=${cur%,*},
            cur=${cur##*,}
        fi
        COMPREPLY=( $(compgen -W "$opts" -P "$psieves" -- $cur) )
    else
        COMPREPLY=()
    fi
}
complete -F _posieve -o default posieve


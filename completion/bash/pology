# Bash completion for Pology scripts.

# Functionality depending on Bash version.
_wcompopt=0
_globnospace="-o nospace"
if [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then
    _wcompopt=1
    _globnospace=
fi

_posieve()
{
    COMPREPLY=()

    local i cur prev opts prefix sieves sieve
    local IFS=$'\n'

    [[ -z "$_posieve_sieves" ]] && _posieve_sieves=`posieve --list-sieve-names`
    [[ -z "$_posieve_options" ]] && _posieve_options=`posieve --list-options`

    # Check if sieves were already issued.
    sieves=
    i=0
    while [[ $i -lt $COMP_CWORD ]]; do
        prev="${COMP_WORDS[i]}"
        if [[ $prev =~ , ]] || [[ $prev == *.py ]]; then
            sieves=$prev
        else
            for sieve in $_posieve_sieves; do
                if [[ $sieve == $prev ]]; then
                    sieves=$prev
                    break
                fi
            done
        fi
        [[ -n "$sieves" ]] && break
        i=$((i + 1))
    done

    # Reassemble parameters if current sieve chain is different from previous.
    if [[ -n "$sieves" ]] && [[ $_posieve_prevsieves != $sieves ]]; then
        _posieve_prevsieves=$sieves
        _posieve_params=`posieve $sieves --list-sieve-params`
        # List of parameters with non-colon parameters given trailing space.
        _posieve_params=${_posieve_params//$'\n'/ $'\n'}' '
        _posieve_params=${_posieve_params//: /:}
        # List of parameters with all parameters prefixed by issuing option.
        _posieve_cparams=-s${_posieve_params//$'\n'/$'\n'-s}
    fi

    [[ $_wcompopt == 1 ]] && compopt -o nospace

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD - 1]}"
    if [[ $cur == -s* ]] && [[ $cur != *:* ]] && [[ -n "$sieves" ]]; then
        COMPREPLY=($(compgen -W "$_posieve_cparams" -- $cur))
    elif [[ $prev == -s ]] && [[ $cur != *:* ]] && [[ -n "$sieves" ]]; then
        COMPREPLY=($(compgen -W "$_posieve_params" -- $cur))
    elif [[ $cur == -* ]] ; then
        COMPREPLY=($(compgen -W "$_posieve_options" -S " " -- $cur))
    elif [[ -z "$sieves" ]] ; then
        prefix=
        if [[ $cur =~ , ]]; then
            prefix=${cur%,*},
            cur=${cur##*,}
        fi
        COMPREPLY=($(compgen -W "$_posieve_sieves" -P "$prefix" -S " " -- $cur))
    else
        # Turn on trailing space after completion on files.
        [[ $_wcompopt == 1 ]] && compopt +o nospace
    fi
}
complete -F _posieve -o default $_globnospace posieve

